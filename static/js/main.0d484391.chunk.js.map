{"version":3,"sources":["util/arrayUtil.ts","util/openStreetmaps.ts","MapContainer/MapContainer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["notEmpty","value","undefined","iterate","list","offset","length","len","i","Math","random","el","tmp","addEdge","nodes","edge","start","finish","n1","get","neighbours","push","n2","dist","lat","lon","lat1","lon1","lat2","lon2","dLat","PI","dLon","a","sin","cos","atan2","sqrt","measure","createGraph","Axios","then","res","elements","data","nodeLinkMap","Map","forEach","v","type","node","linkCounterOpt","set","id","edges","splitEdge","way","linkMap","lengthSum","prevNode","linkCount","currNode","slice","e","MapContainer","useState","lng","zoom","markers","Array","path","state","setState","position","useEffect","Promise","resolve","reject","navigator","geolocation","Error","getCurrentPosition","positionError","coords","latitude","longitude","g","console","log","cycle","graph","minLength","maxLength","labeledNodes","k","visited","dfs","nodeId","arr","map","n","indexOf","nodeIds","riter","next","neighID","neigh","r","findCycle","filter","catch","center","onlocationfound","ev","latlng","TileLayer","attribution","url","m","Marker","key","Polyline","positions","App","prefersDarkMode","useMediaQuery","theme","React","useMemo","createMuiTheme","palette","history","useHistory","location","pathname","substring","setValue","className","ThemeProvider","CssBaseline","to","BottomNavigation","onChange","event","newValue","BottomNavigationAction","label","icon","LocationOn","Add","Favorite","Restore","More","Boolean","window","hostname","match","ReactDOM","render","StrictMode","basename","process","document","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0d484391.chunk.js","sourcesContent":["export function notEmpty<TValue>(value: TValue | null | undefined): value is TValue {\n  return value !== null && value !== undefined;\n}\n\nexport function iterate<T>(list: Array<T>) {\n  let offset = 0;\n  return function () {\n    if (offset === list.length) return null;\n\n    const len = list.length - offset;\n    const i = (Math.random() * len) | 0;\n    const el = list[offset + i];\n\n    const tmp = list[offset];\n    list[offset] = el;\n    list[offset + i] = tmp;\n    offset++;\n\n    return el;\n  };\n}\n","import Axios from 'axios';\nimport { iterate } from './arrayUtil';\n\nexport const getGeolocation = (): Promise<Position> => {\n  return new Promise<Position>((resolve, reject) => {\n    if (!navigator.geolocation) reject(new Error('Your browser does not support geolocation'));\n\n    const onSuccess: PositionCallback = (position) => {\n      resolve(position);\n    };\n    const onError: PositionErrorCallback = (positionError) => {\n      reject(positionError);\n    };\n\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n  });\n};\n\nexport const getStartingNodes = (lat: number, lng: number): Promise<unknown> => {\n  return Axios.get(\n    `https://www.openstreetmap.org/api/0.6/map?bbox=${lng - 0.1},${lat - 0.1},${lng + 0.1},${lat + 0.1}`,\n  );\n};\n\n// type RoutingData = { coordinates: Array<[number, number]>; properties: { distance: string } };\n\n// export const getPath = (flat: number, flng: number, tlat: number, tlng: number): Promise<RoutingData> => {\n//   return Axios.get<RoutingData>(\n//     `https://wandering-application.herokuapp.com/api/1.0/gosmore.php?format=geojson&flat=${flat}&flon=${flng}&tlat=${tlat}&tlon=${tlng}&fast=0&layer=mapnik`, // &v=foot\n//   ).then((res) => res.data);\n// };\n\nexport function measure(lat1: number, lon1: number, lat2: number, lon2: number) {\n  // generally used geo measurement function\n  const R = 6378.137; // Radius of earth in KM\n  const dLat = (lat2 * Math.PI) / 180 - (lat1 * Math.PI) / 180;\n  const dLon = (lon2 * Math.PI) / 180 - (lon1 * Math.PI) / 180;\n  const a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos((lat1 * Math.PI) / 180) * Math.cos((lat2 * Math.PI) / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  const d = R * c;\n  return d; // kilometers\n}\n\ntype Node = {\n  type: 'node';\n  id?: number;\n  lat?: number;\n  lon?: number;\n  neighbours: Array<Edge>;\n};\n\ntype MapWay = {\n  type: 'way';\n  id?: number;\n  nodes?: Array<number>;\n};\n\ntype MapElement =\n  | Node\n  | MapWay\n  | {\n      type: 'relation';\n    };\n\ntype MapData = {\n  elements: Array<MapElement>;\n};\n\ntype Edge = {\n  length: number;\n  nodes: Array<number>;\n};\n\nconst addEdge = (nodes: Map<number, Node>, edge: Edge) => {\n  const start = edge.nodes[0];\n  const finish = edge.nodes[edge.nodes.length - 1];\n\n  const n1 = nodes.get(start);\n  if (n1 != null) {\n    n1.neighbours.push(edge);\n  }\n\n  const n2 = nodes.get(finish);\n  if (n2 != null) {\n    n2.neighbours.push(edge);\n  }\n};\n\nconst dist = (n1: Node, n2: Node) => {\n  if (n1.lat == null || n1.lon == null || n2.lat == null || n2.lon == null) return 0;\n\n  return measure(n1.lat, n1.lon, n2.lat, n2.lon);\n};\n\nconst splitEdge = (way: MapWay, nodes: Map<number, Node>, linkMap: Map<number, number>, start = 0): Array<Edge> => {\n  if (way.nodes == null) return [];\n  let lengthSum = 0;\n  let prevNode: Node | null = nodes.get(way.nodes[start]) ?? null;\n\n  for (let i = start + 1; i < way.nodes.length - 1; i++) {\n    const linkCount = linkMap.get(way.nodes[i]);\n    const currNode: Node | null = nodes.get(way.nodes[i]) ?? null;\n    if (prevNode != null && currNode != null) {\n      lengthSum += dist(prevNode, currNode);\n    }\n    prevNode = currNode;\n\n    if (linkCount != null && linkCount > 1) {\n      const edge = { nodes: way.nodes.slice(start, i + 1), length: lengthSum };\n      addEdge(nodes, edge);\n      return [edge, ...splitEdge(way, nodes, linkMap, i)];\n    }\n  }\n  const edge = { nodes: way.nodes.slice(start), length: lengthSum };\n  addEdge(nodes, edge);\n  return [edge];\n};\n\nexport const createGraph = (lat: number, lon: number): Promise<{ nodes: Map<number, Node>; edges: Array<Edge> }> => {\n  const radius = 0.005;\n  return Axios.get<MapData>(\n    `https://www.openstreetmap.org/api/0.6/map?bbox=${lon - radius},${lat - radius},${lon + radius},${lat + radius}`,\n  ).then((res) => {\n    const elements = res.data.elements;\n    const nodeLinkMap = new Map<number, number>();\n    const nodes = new Map<number, Node>();\n    elements.forEach((v) => {\n      if (v.type === 'way' && v.nodes != null) {\n        v.nodes.forEach((node) => {\n          const linkCounterOpt = nodeLinkMap.get(node);\n          nodeLinkMap.set(node, linkCounterOpt != null ? linkCounterOpt + 1 : 1);\n        });\n      } else if (v.type === 'node' && v.id != null) {\n        v.neighbours = [];\n        nodes.set(v.id, v);\n      }\n    });\n\n    const edges: Array<Edge> = [];\n    elements.forEach((v) => {\n      if (v.type === 'way' && v.nodes != null) {\n        splitEdge(v, nodes, nodeLinkMap).forEach((e) => edges.push(e));\n      }\n    });\n    return { nodes, edges };\n  });\n};\n\n// TODO: Improve finding routes\nexport const findCycle = (\n  start: number,\n  graph: { nodes: Map<number, Node>; edges: Array<Edge> },\n  minLength = 0,\n  maxLength = 10,\n) => {\n  const labeledNodes = new Map<number, Node & { visited: number }>();\n  graph.nodes.forEach((v, k) => labeledNodes.set(k, { ...v, visited: 0 }));\n\n  const dfs = (\n    nodeId: number,\n    length = 0,\n    arr: Array<number> = [],\n  ): { nodeIds: Array<number>; length: number } | null => {\n    const node = labeledNodes.get(nodeId);\n    if (node == null) return null;\n\n    node.visited += 1;\n\n    if (\n      length > minLength &&\n      node.neighbours.map((n) => (n.nodes[0] !== nodeId ? n.nodes[0] : n.nodes[n.nodes.length - 1])).indexOf(start) !==\n        -1\n    ) {\n      return { nodeIds: arr, length };\n    }\n\n    if (length > maxLength) return null;\n\n    const riter = iterate(node.neighbours);\n\n    for (let next = riter(); next != null; next = riter()) {\n      const n = next;\n      const neighID = n.nodes[0] !== nodeId ? n.nodes[0] : n.nodes[n.nodes.length - 1];\n      const neigh = labeledNodes.get(neighID);\n      if (neigh != null && n.length != null && neigh.visited < 2) {\n        const r = dfs(neighID, length + n.length, [...arr, neighID]);\n        if (r != null) {\n          return r;\n        }\n      }\n    }\n    return null;\n  };\n\n  return dfs(start);\n};\n","import React, { useState, useEffect } from 'react';\nimport { Map, TileLayer, Marker, Polyline } from 'react-leaflet';\nimport { LocationEvent } from 'leaflet';\nimport { getGeolocation, createGraph, findCycle } from '../util/openStreetmaps';\nimport { notEmpty } from '../util/arrayUtil';\n\nimport './MapContainer.scss';\n\nfunction MapContainer() {\n  const [state, setState] = useState({\n    lat: 0,\n    lng: 0,\n    zoom: 3,\n    markers: new Array<[number, number]>(),\n    path: new Array<[number, number]>(),\n  });\n\n  const position = { lat: state.lat, lng: state.lng };\n\n  useEffect(() => {\n    getGeolocation()\n      .then((position) => {\n        const { latitude, longitude } = position.coords;\n        setState((state) => ({\n          ...state,\n          lat: latitude,\n          lng: longitude,\n          zoom: 16,\n        }));\n        return createGraph(latitude, longitude);\n      })\n      .then((g) => {\n        console.log(g);\n        const cycle = findCycle(g.edges[0].nodes[0], g, 2.0, 2.5);\n        console.log(cycle?.length);\n        const path =\n          cycle?.nodeIds\n            .map((v) => g.nodes.get(v))\n            .filter(notEmpty)\n            .map((v) => (v.lat != null && v.lon != null ? ([v.lat, v.lon] as [number, number]) : null))\n            .filter(notEmpty) ?? [];\n\n        setState((state) => ({\n          ...state,\n          path,\n        }));\n      })\n      .catch(() => null); // Silently ignore\n  }, []);\n\n  const onlocationfound = (ev: LocationEvent) => {\n    setState((state) => ({\n      ...state,\n      lat: ev.latlng.lat,\n      lng: ev.latlng.lng,\n      zoom: 16,\n    }));\n  };\n\n  return (\n    <Map id=\"map-root\" center={position} zoom={state.zoom} onlocationfound={onlocationfound}>\n      <TileLayer\n        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {state.markers.map((m, i) => (\n        <Marker key={i} position={m} />\n      ))}\n      <Polyline positions={state.path} />\n    </Map>\n  );\n}\n\nexport default MapContainer;\n","import React, { useState } from 'react';\nimport { Switch, Route, useHistory, Redirect } from 'react-router-dom';\nimport MapContainer from './MapContainer/MapContainer';\nimport {\n  BottomNavigation,\n  BottomNavigationAction,\n  createMuiTheme,\n  ThemeProvider,\n  CssBaseline,\n  useMediaQuery,\n} from '@material-ui/core';\nimport { Restore, Favorite, LocationOn, Add, More } from '@material-ui/icons';\n\nimport './App.scss';\n\nfunction App() {\n  const prefersDarkMode = !useMediaQuery('(prefers-color-scheme: light)');\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  const history = useHistory();\n  const [value, setValue] = useState(history.location.pathname.substring(1) || 'map');\n\n  return (\n    <div className=\"app-root\">\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Switch>\n          <Route path=\"/map\">\n            <MapContainer />\n          </Route>\n          <Route path=\"/new\">{'New is working'}</Route>\n          <Route path=\"/fav\">{'Favorites is working'}</Route>\n          <Route path=\"/hist\">{'History is working'}</Route>\n          <Route path=\"/more\">{'More is working'}</Route>\n          <Route path=\"/\">\n            <Redirect to=\"/map\" />\n          </Route>\n        </Switch>\n        {/*This div is workaround for wobbly behavior of navbar*/}\n        <div>\n          <BottomNavigation\n            value={value}\n            onChange={(event, newValue) => {\n              history.push(`/${newValue}`);\n              setValue(newValue);\n            }}\n          >\n            <BottomNavigationAction label=\"Map\" value=\"map\" icon={<LocationOn />} />\n            <BottomNavigationAction label=\"New\" value=\"new\" icon={<Add />} />\n            <BottomNavigationAction label=\"Favorites\" value=\"fav\" icon={<Favorite />} />\n            <BottomNavigationAction label=\"History\" value=\"hist\" icon={<Restore />} />\n            <BottomNavigationAction label=\"More\" value=\"more\" icon={<More />} />\n          </BottomNavigation>\n        </div>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}